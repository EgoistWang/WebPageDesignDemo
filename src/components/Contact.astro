---
---

<section id="contact" class="section-padding bg-gradient-to-br from-gray-900 to-purple-900 text-white relative overflow-hidden">
  <!-- Animated background -->
  <div class="absolute inset-0 opacity-20">
    <div class="absolute top-1/4 left-1/4 w-64 h-64 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full filter blur-3xl animate-pulse"></div>
    <div class="absolute bottom-1/4 right-1/4 w-96 h-96 bg-gradient-to-r from-purple-400 to-pink-500 rounded-full filter blur-3xl animate-pulse delay-1000"></div>
  </div>

  <div class="max-w-7xl mx-auto relative z-10">
    <!-- Section Header -->
    <div class="text-center mb-16">
      <h2 class="text-4xl sm:text-5xl font-bold gradient-text mb-6 contact-title">
        Get In Touch
      </h2>
      <p class="text-xl text-gray-300 max-w-3xl mx-auto contact-subtitle">
        Ready to start your next project? Let's collaborate and create something amazing together. 
        I'm always excited to discuss new opportunities and innovative ideas.
      </p>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-2 gap-12">
      <!-- Contact Form -->
      <div class="contact-form-container">
        <div class="glass-strong rounded-2xl p-8">
          <h3 class="text-2xl font-bold mb-6">Send a Message</h3>
          
          <form 
            id="contact-form" 
            action="https://formspree.io/f/YOUR_FORM_ID" 
            method="POST"
            class="space-y-6"
          >
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-6">
              <div class="form-group">
                <label for="firstName" class="block text-sm font-medium mb-2">First Name</label>
                <input
                  type="text"
                  id="firstName"
                  name="firstName"
                  required
                  class="w-full px-4 py-3 rounded-lg glass border border-white/20 text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 focus:outline-none transition-all duration-300"
                  placeholder="John"
                />
              </div>
              <div class="form-group">
                <label for="lastName" class="block text-sm font-medium mb-2">Last Name</label>
                <input
                  type="text"
                  id="lastName"
                  name="lastName"
                  required
                  class="w-full px-4 py-3 rounded-lg glass border border-white/20 text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 focus:outline-none transition-all duration-300"
                  placeholder="Doe"
                />
              </div>
            </div>

            <div class="form-group">
              <label for="email" class="block text-sm font-medium mb-2">Email Address</label>
              <input
                type="email"
                id="email"
                name="email"
                required
                class="w-full px-4 py-3 rounded-lg glass border border-white/20 text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 focus:outline-none transition-all duration-300"
                placeholder="john.doe@example.com"
              />
            </div>

            <div class="form-group">
              <label for="company" class="block text-sm font-medium mb-2">Company (Optional)</label>
              <input
                type="text"
                id="company"
                name="company"
                class="w-full px-4 py-3 rounded-lg glass border border-white/20 text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 focus:outline-none transition-all duration-300"
                placeholder="Your Company"
              />
            </div>

            <div class="form-group">
              <label for="subject" class="block text-sm font-medium mb-2">Subject</label>
              <select
                id="subject"
                name="subject"
                required
                class="w-full px-4 py-3 rounded-lg glass border border-white/20 text-white focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 focus:outline-none transition-all duration-300"
              >
                <option value="">Select a subject</option>
                <option value="project">New Project</option>
                <option value="collaboration">Collaboration</option>
                <option value="job">Job Opportunity</option>
                <option value="consultation">Consultation</option>
                <option value="other">Other</option>
              </select>
            </div>

            <div class="form-group">
              <label for="budget" class="block text-sm font-medium mb-2">Project Budget (Optional)</label>
              <select
                id="budget"
                name="budget"
                class="w-full px-4 py-3 rounded-lg glass border border-white/20 text-white focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 focus:outline-none transition-all duration-300"
              >
                <option value="">Select budget range</option>
                <option value="under-5k">Under $5,000</option>
                <option value="5k-15k">$5,000 - $15,000</option>
                <option value="15k-30k">$15,000 - $30,000</option>
                <option value="30k-plus">$30,000+</option>
                <option value="discuss">Let's discuss</option>
              </select>
            </div>

            <div class="form-group">
              <label for="message" class="block text-sm font-medium mb-2">Message</label>
              <textarea
                id="message"
                name="message"
                rows="5"
                required
                class="w-full px-4 py-3 rounded-lg glass border border-white/20 text-white placeholder-gray-400 focus:border-primary-500 focus:ring-2 focus:ring-primary-500/20 focus:outline-none transition-all duration-300 resize-none"
                placeholder="Tell me about your project, ideas, or how I can help you..."
              ></textarea>
            </div>

            <button
              type="submit"
              id="submit-btn"
              class="w-full btn-primary py-4 text-lg font-semibold relative overflow-hidden group"
            >
              <span class="relative z-10 flex items-center justify-center">
                <span id="btn-text">Send Message</span>
                <svg id="btn-icon" class="ml-3 w-5 h-5 transform group-hover:translate-x-1 transition-transform duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 19l9 2-9-18-9 18 9-2zm0 0v-8"></path>
                </svg>
                <svg id="loading-icon" class="ml-3 w-5 h-5 animate-spin hidden" fill="none" viewBox="0 0 24 24">
                  <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                  <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
                </svg>
              </span>
              <div class="absolute inset-0 bg-gradient-to-r from-primary-600 to-accent-600 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
            </button>
          </form>
        </div>
      </div>

      <!-- Contact Information -->
      <div class="contact-info">
        <div class="space-y-8">
          <!-- Contact Details -->
          <div class="glass-strong rounded-2xl p-8">
            <h3 class="text-2xl font-bold mb-6">Contact Information</h3>
            <div class="space-y-6">
              <div class="flex items-start space-x-4">
                <div class="flex-shrink-0 w-12 h-12 bg-gradient-to-r from-primary-500 to-accent-500 rounded-lg flex items-center justify-center">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 5.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"></path>
                  </svg>
                </div>
                <div>
                  <h4 class="font-semibold text-lg">Email</h4>
                  <p class="text-gray-300">your.email@example.com</p>
                  <p class="text-sm text-gray-400 mt-1">Response within 24 hours</p>
                </div>
              </div>

              <div class="flex items-start space-x-4">
                <div class="flex-shrink-0 w-12 h-12 bg-gradient-to-r from-green-500 to-emerald-500 rounded-lg flex items-center justify-center">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"></path>
                  </svg>
                </div>
                <div>
                  <h4 class="font-semibold text-lg">Phone</h4>
                  <p class="text-gray-300">+1 (555) 123-4567</p>
                  <p class="text-sm text-gray-400 mt-1">Available Mon-Fri, 9AM-6PM PST</p>
                </div>
              </div>

              <div class="flex items-start space-x-4">
                <div class="flex-shrink-0 w-12 h-12 bg-gradient-to-r from-purple-500 to-pink-500 rounded-lg flex items-center justify-center">
                  <svg class="w-6 h-6 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  </svg>
                </div>
                <div>
                  <h4 class="font-semibold text-lg">Location</h4>
                  <p class="text-gray-300">San Francisco, CA</p>
                  <p class="text-sm text-gray-400 mt-1">Open to remote work</p>
                </div>
              </div>
            </div>
          </div>

          <!-- Social Links -->
          <div class="glass-strong rounded-2xl p-8">
            <h3 class="text-2xl font-bold mb-6">Connect With Me</h3>
            <div class="grid grid-cols-2 gap-4">
              <a
                href="https://github.com"
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-center space-x-3 p-4 rounded-lg hover:bg-white/10 transition-all duration-300 group"
              >
                <svg class="w-6 h-6 text-gray-300 group-hover:text-white" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 2C6.477 2 2 6.484 2 12.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0112 6.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.202 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.943.359.309.678.92.678 1.855 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0022 12.017C22 6.484 17.522 2 12 2z"/>
                </svg>
                <span class="text-gray-300 group-hover:text-white">GitHub</span>
              </a>

              <a
                href="https://linkedin.com"
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-center space-x-3 p-4 rounded-lg hover:bg-white/10 transition-all duration-300 group"
              >
                <svg class="w-6 h-6 text-gray-300 group-hover:text-white" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                </svg>
                <span class="text-gray-300 group-hover:text-white">LinkedIn</span>
              </a>

              <a
                href="https://twitter.com"
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-center space-x-3 p-4 rounded-lg hover:bg-white/10 transition-all duration-300 group"
              >
                <svg class="w-6 h-6 text-gray-300 group-hover:text-white" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M23.953 4.57a10 10 0 01-2.825.775 4.958 4.958 0 002.163-2.723c-.951.555-2.005.959-3.127 1.184a4.92 4.92 0 00-8.384 4.482C7.69 8.095 4.067 6.13 1.64 3.162a4.822 4.822 0 00-.666 2.475c0 1.71.87 3.213 2.188 4.096a4.904 4.904 0 01-2.228-.616v.06a4.923 4.923 0 003.946 4.827 4.996 4.996 0 01-2.212.085 4.936 4.936 0 004.604 3.417 9.867 9.867 0 01-6.102 2.105c-.39 0-.779-.023-1.17-.067a13.995 13.995 0 007.557 2.209c9.053 0 13.998-7.496 13.998-13.985 0-.21 0-.42-.015-.63A9.935 9.935 0 0024 4.59z"/>
                </svg>
                <span class="text-gray-300 group-hover:text-white">Twitter</span>
              </a>

              <a
                href="https://dribbble.com"
                target="_blank"
                rel="noopener noreferrer"
                class="flex items-center space-x-3 p-4 rounded-lg hover:bg-white/10 transition-all duration-300 group"
              >
                <svg class="w-6 h-6 text-gray-300 group-hover:text-white" fill="currentColor" viewBox="0 0 24 24">
                  <path d="M12 24C5.385 24 0 18.615 0 12S5.385 0 12 0s12 5.385 12 12-5.385 12-12 12zm10.12-10.358c-.35-.11-3.17-.953-6.384-.438 1.34 3.684 1.887 6.684 1.992 7.308 2.3-1.555 3.936-4.02 4.395-6.87zm-6.115 7.808c-.153-.9-.75-4.032-2.19-7.77l-.066.02c-5.79 2.015-7.86 6.025-8.04 6.4 1.73 1.358 3.92 2.166 6.29 2.166 1.42 0 2.77-.29 4-.816zm-11.62-2.58c.232-.4 3.045-5.055 8.332-6.765.135-.045.27-.084.405-.12-.26-.585-.54-1.167-.832-1.74C7.17 11.775 2.206 11.71 1.756 11.7l-.004.312c0 2.633.998 5.037 2.634 6.855zm-2.42-8.955c.46.008 4.683.026 9.477-1.248-1.698-3.018-3.53-5.558-3.8-5.928-2.868 1.35-5.01 3.99-5.676 7.17zM9.6 2.052c.282.38 2.145 2.914 3.822 6 3.645-1.365 5.19-3.44 5.373-3.702-1.81-1.61-4.19-2.586-6.795-2.586-.825 0-1.63.1-2.4.285zm10.335 3.483c-.218.29-1.935 2.493-5.724 4.04.24.49.47.985.68 1.486.08.18.15.36.22.53 3.41-.43 6.8.26 7.14.33-.02-2.42-.88-4.64-2.31-6.38z"/>
                </svg>
                <span class="text-gray-300 group-hover:text-white">Dribbble</span>
              </a>
            </div>
          </div>

          <!-- Response Time -->
          <div class="glass-strong rounded-2xl p-6 text-center">
            <div class="inline-flex items-center space-x-2 text-green-400 mb-2">
              <div class="w-3 h-3 bg-green-400 rounded-full animate-pulse"></div>
              <span class="font-semibold">Available for new projects</span>
            </div>
            <p class="text-gray-300 text-sm">
              Average response time: 2-4 hours
            </p>
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  // Animation setup
  function initContactAnimations() {
    // Animate section header
    gsap.fromTo('.contact-title',
      { opacity: 0, y: 50 },
      {
        opacity: 1,
        y: 0,
        duration: 1,
        ease: 'power2.out',
        scrollTrigger: {
          trigger: '#contact',
          start: 'top 80%',
          toggleActions: 'play none none reverse'
        }
      }
    );

    gsap.fromTo('.contact-subtitle',
      { opacity: 0, y: 30 },
      {
        opacity: 1,
        y: 0,
        duration: 1,
        delay: 0.2,
        ease: 'power2.out',
        scrollTrigger: {
          trigger: '#contact',
          start: 'top 80%',
          toggleActions: 'play none none reverse'
        }
      }
    );

    // Animate form and contact info
    gsap.fromTo('.contact-form-container',
      { opacity: 0, x: -50 },
      {
        opacity: 1,
        x: 0,
        duration: 1.2,
        ease: 'power2.out',
        scrollTrigger: {
          trigger: '.contact-form-container',
          start: 'top 80%',
          toggleActions: 'play none none reverse'
        }
      }
    );

    gsap.fromTo('.contact-info',
      { opacity: 0, x: 50 },
      {
        opacity: 1,
        x: 0,
        duration: 1.2,
        ease: 'power2.out',
        scrollTrigger: {
          trigger: '.contact-info',
          start: 'top 80%',
          toggleActions: 'play none none reverse'
        }
      }
    );

    // Animate form fields
    gsap.fromTo('.form-group',
      { opacity: 0, y: 20 },
      {
        opacity: 1,
        y: 0,
        duration: 0.6,
        stagger: 0.1,
        ease: 'power2.out',
        scrollTrigger: {
          trigger: '.contact-form-container',
          start: 'top 70%',
          toggleActions: 'play none none reverse'
        }
      }
    );
  }

  // Form handling
  function initContactForm() {
    const form = document.getElementById('contact-form');
    const submitBtn = document.getElementById('submit-btn');
    const btnText = document.getElementById('btn-text');
    const btnIcon = document.getElementById('btn-icon');
    const loadingIcon = document.getElementById('loading-icon');

    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      // Update button state
      submitBtn.disabled = true;
      btnText.textContent = 'Sending...';
      btnIcon.classList.add('hidden');
      loadingIcon.classList.remove('hidden');

      // Simple form validation - Formspree will handle the actual submission
      const formData = new FormData(form);
      const requiredFields = ['firstName', 'lastName', 'email', 'subject', 'message'];
      let isValid = true;

      for (const field of requiredFields) {
        if (!formData.get(field)) {
          isValid = false;
          break;
        }
      }

      if (!isValid) {
        showNotification('Please fill in all required fields.', 'error');
        // Reset button
        submitBtn.disabled = false;
        btnText.textContent = 'Send Message';
        btnIcon.classList.remove('hidden');
        loadingIcon.classList.add('hidden');
        return;
      }

      // Let the form submit naturally to Formspree
      showNotification('Sending message...', 'success');
      // The form will now submit to Formspree automatically
    });

    // Form validation with real-time feedback
    const inputs = form?.querySelectorAll('input, select, textarea');
    inputs?.forEach(input => {
      input.addEventListener('blur', validateField);
      input.addEventListener('focus', clearFieldError);
    });

    function validateField(e) {
      const field = e.target;
      const value = field.value.trim();
      const isRequired = field.hasAttribute('required');
      
      if (isRequired && !value) {
        showFieldError(field, 'This field is required');
        return false;
      }
      
      if (field.type === 'email' && value) {
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(value)) {
          showFieldError(field, 'Please enter a valid email address');
          return false;
        }
      }
      
      clearFieldError(field);
      return true;
    }

    function showFieldError(field, message) {
      clearFieldError(field);
      field.classList.add('border-red-500');
      
      const errorDiv = document.createElement('div');
      errorDiv.className = 'text-red-400 text-sm mt-1 field-error';
      errorDiv.textContent = message;
      field.parentNode.appendChild(errorDiv);
    }

    function clearFieldError(field) {
      field.classList.remove('border-red-500');
      const errorDiv = field.parentNode.querySelector('.field-error');
      if (errorDiv) {
        errorDiv.remove();
      }
    }
  }

  // Notification system
  function showNotification(message, type) {
    const notification = document.createElement('div');
    notification.className = `fixed top-4 right-4 z-[60] px-6 py-4 rounded-lg text-white font-medium transform transition-all duration-300 max-w-md ${
      type === 'success' ? 'bg-green-500' : 'bg-red-500'
    }`;
    
    notification.innerHTML = `
      <div class="flex items-start space-x-3">
        <svg class="w-6 h-6 flex-shrink-0 mt-0.5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          ${type === 'success' 
            ? '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>'
            : '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>'
          }
        </svg>
        <div>
          <p>${message}</p>
        </div>
        <button class="ml-4 flex-shrink-0" onclick="this.parentElement.parentElement.remove()">
          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
    `;
    
    document.body.appendChild(notification);
    
    // Animate in
    gsap.fromTo(notification, 
      { opacity: 0, x: 100, scale: 0.8 },
      { opacity: 1, x: 0, scale: 1, duration: 0.4, ease: 'back.out(1.7)' }
    );
    
    // Remove after 5 seconds
    setTimeout(() => {
      gsap.to(notification, {
        opacity: 0,
        x: 100,
        scale: 0.8,
        duration: 0.3,
        onComplete: () => {
          if (notification.parentNode) {
            document.body.removeChild(notification);
          }
        }
      });
    }, 5000);
  }

  // Initialize everything
  document.addEventListener('DOMContentLoaded', () => {
    initContactAnimations();
    initContactForm();
  });
</script>